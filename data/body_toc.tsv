1	1	1章 定量的な設計と解析の基礎
2	1	1.1 はじめに
2	3	1.2 コンピュータのクラス
2	6	1.3 コンピュータアーキテクチャを設計する
2	10	1.4 テクノロジのトレンド
2	13	1.5 半導体の電力とエネルギーのトレンド
2	16	1.6 コストのトレンド
2	19	1.7 確実性
2	20	1.8 性能の測定、報告、整理の方法
2	25	1.9 コンピュータ設計の定量的な原則
2	29	1.10 総合的な実例：性能、価格、電力
2	31	1.11 誤った考えと落とし穴
2	33	1.12 おわりに
2	35	1.13 歴史展望と参考文献
2	35	1.14 ケーススタディと演習問題

1	41	2章 メモリ階層の設計
2	41	2.1 はじめに
2	45	2.2 メモリ技術と最適化
2	50	2.3 キャッシュの性能を向上させる10の高度な改良法
2	61	2.4 保護：仮想メモリと仮想マシン
2	66	2.5 他の章との関連：メモリ階層の設計
2	67	2.6 総合的な実例：ARM Cortex-A53とIntel Core i7 6700のメモリ階層
2	74	2.7 誤った考えと落とし穴
2	76	2.8 おわりに：将来予測
2	77	2.9 歴史展望と参考文献
2	77	2.10 ケーススタディと演習問題

1	87	3章 命令レベル並列性とその活用
2	87	3.1 命令レベル並列性：概念とチャレンジ
2	91	3.2 命令レベル並列性技術のためのコンパイラの基本
2	94	3.3 進んだ分岐予測による分岐コストの削減
2	98	3.4 動的スケジューリングによるデータハザードの克服
2	103	3.5 動的スケジューリング：例題とアルゴリズム
2	107	3.6 ハードウェアベースの投機処理
2	113	3.7 複数命令発行と静的スケジューリングを用いた命令レベル並列性の抽出
2	115	3.8 動的スケジューリング、複数命令発行および投機処理を用いた命令レベル並列性の抽出
2	119	3.9 命令供給と投機処理のための高度な技術
2	124	3.10 他の章との関連：ILPのアプローチとメモリシステム
2	125	3.11 マルチスレッディング：単一プロセッサスループット改善のためのスレッドレベル並列性抽出
2	128	3.12 総合的実例：ARM Cortex-A53とCore i7 6700
2	133	3.13 誤った考えと落とし穴
2	136	3.14 おわりに：次は何か
2	137	3.15 歴史展望と参考文献
2	137	3.16 ケーススタディと演習問題

1	145	4章 ベクタ、SIMD、GPUにおけるデータレベル並列性
2	145	4.1 はじめに
2	146	4.2 ベクタアーキテクチャ
2	156	4.3 マルチメディア向け SIMD拡張命令セット
2	159	4.4 グラフィック処理ユニット
2	173	4.5 ループレベル並列性の検出と増強
2	177	4.6 他の章との関連
2	178	4.7 総合的な実例：組み込み対サーバ GPU、およびTesla対Core i7
2	182	4.8 誤った考えと落とし穴
2	183	4.9 おわりに
2	183	4.10 歴史展望と参考文献
2	183	4.11 ケーススタディと演習問題

1	189	5章 スレッドレベル並列性
2	189	5.1 はじめに
2	194	5.2 集中共有メモリ型アーキテクチャ
2	203	5.3 対称型共有メモリ型マルチプロセッサの性能
2	209	5.4 分散共有メモリとディレクトリベースコヒーレンス制御
2	213	5.5 同期：その基本
2	216	5.6 メモリコンシステンシモデル：導入
2	219	5.7 他の章との関連
2	221	5.8 総合的な実例：マルチコアプロセッサとその性能
2	228	5.9 誤った考えと落とし穴
2	230	5.10 マルチコアの性能向上の将来
2	232	5.11 おわりに
2	232	5.12 歴史展望と参考文献
2	233	5.13 ケーススタディと演習問題

1	243	6章 要求レベル並列性/データレベル並列性を利用したウェアハウススケールコンピュータ
2	243	6.1 はじめに
2	246	6.2 ウェアハウススケールコンピュータのプログラミングモデルとワークロード
2	249	6.3 ウェアハウススケールコンピュータのコンピュータアーキテクチャ
2	252	6.4 ウェアハウススケールコンピュータの効率とコスト
2	256	6.5 クラウドコンピューティング：ユーティリティコンピューティングの復活
2	261	6.6 他の章との関連
2	263	6.7 総合的な実例：Google社のウェアハウススケールコンピュータ
2	267	6.8 誤った考えと落とし穴
2	269	6.9 おわりに
2	270	6.10 歴史展望と参考文献
2	270	6.11 ケーススタディと演習問題

1	281	7章 領域特化アーキテクチャ
2	281	7.1 はじめに
2	282	7.2 DSAのガイドライン
2	284	7.3 領域の例：深層ニューラルネットワーク
2	289	7.4 GoogleのTensor プロセッシングユニット：推論データセンターの加速器
2	294	7.5 MicrosoftのCatapult：柔軟なデータセンターのアクセラレータ
2	299	7.6 IntelのCrest：学習向けデータセンターのアクセラレータ
2	300	7.7 Pixel Visual Core：パーソナルモバイルデバイスのための画像処理ユニット
2	306	7.8 他の章との関連
2	307	7.9 総合的的な実例：CPU、GPU、DNNアクセラレータの比較
2	311	7.10 誤った考えと落とし穴
2	312	7.11 おわりに
2	313	7.12 歴史展望と参考文献
2	313	7.13 ケーススタディと演習問題

1	319	付録A 命令セットの原理
2	319	A.1 はじめに
2	320	A.2 命令セットアーキテクチャの分類
2	322	A.3 メモリアドレッシング
2	325	A.4 オペランドタイプとオペランドサイズ
2	326	A.5 命令セットにおける命令操作
2	327	A.6 制御のための命令
2	329	A.7 命令セットのエンコード
2	331	A.8 他の章との関連：コンパイラの役割
2	335	A.9 総合的な実例：RISC-Vアーキテクチャ
2	340	A.10 誤った考えと落とし穴
2	342	A.11 おわりに
2	342	A.12 歴史展望と参考文献
2	342	A.13 演習問題

1	347	付録B メモリ階層の復習
2	347	B.1 はじめに
2	354	B.2 キャッシュの性能
2	358	B.3 6つの基本的なキャッシュ改良法
2	367	B.4 仮想メモリ
2	371	B.5 仮想メモリの保護とその例
2	376	B.6 誤った考えと落とし穴
2	377	B.7 おわりに
2	377	B.8 歴史展望と参考文献
2	377	B.9 演習問題

1	381	付録C パイプライン処理：基本および中間的な概念
2	381	C.1 はじめに
2	385	C.2 パイプライン処理の主要な障害：パイプラインハザード
2	393	C.3 パイプラインの実装法
2	399	C.4 何がパイプラインの実装を困難にするのか
2	403	C.5 複数サイクル演算を扱うためのRISC-V整数パイプライン拡張
2	409	C.6 総合的な実例：MIPS R4000パイプライン
2	413	C.7 他の章との関連
2	416	C.8 誤った考えと落とし穴
2	416	C.9 おわりに
2	416	C.10 歴史展望と参考文献
2	417	C.11 演習問題
